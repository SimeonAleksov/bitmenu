[MASTER]

# Specify a configuration file.
#rcfile=

# Python code to execute, usually for sys.path manipulation such as
# pygtk.require().
#init-hook=

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=CVS,docs,virtualenvs,btspython,bts-pipeline,.git,.mypy_cache,.pytest_cache,.ruff_cache

ignore-patterns=
    .*_pb2.*,  # Files generated from proto files
    __pycache__,

# Pickle collected data for later comparisons.
# BTS: CI runs are independent, so disabling makes sense. Locally, it should
# probably be enabled but - does anyone run Pylint locally at all?
persistent=no

# In error mode, messages with a category besides ERROR or FATAL are
# suppressed, and no reports are done by default. Error mode is compatible with
# disabling specific errors.
errors-only=yes

# List of plugins (as comma separated values of python modules names) to load,
# usually to register additional checkers.
load-plugins=pylint_django,pylint_protobuf

# Use multiple processes to speed up Pylint.
jobs=1

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=no

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code
extension-pkg-whitelist=

[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show
# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED
confidence=

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once).You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use"--disable=all --enable=classes
# --disable=W"

# BTS: Since we're using error mode, it makes no sense to check for anything
# else as findings will be suppressed anyway.
disable=all

# Enable the message, report, category or checker with the given id(s). You can
# either give multiple identifier separated by comma (,) or put this option
# multiple time (only on the command line, not in the configuration file where
# it should appear only once). See also the "--disable" option for examples.

# BTS: generated with sth. like (and then commented out manually):
# pylint --list-msgs | grep -E "^:" | grep -E " \([EF]{1}" | sort | tr -d ':' | cut -d')' -f1 | sed -e 's/ (/, # /'
enable=
    abstract-class-instantiated, # E0110
    access-member-before-definition, # E0203
    assigning-non-slot, # E0237
    assignment-from-no-return, # E1111
    assignment-from-none, # E1128
    astroid-error, # F0002
    await-outside-async, # E1142
    bad-configuration-section, # E0014
    bad-except-order, # E0701
    bad-exception-cause, # E0705
    bad-format-character, # E1300
    bad-plugin-value, # E0013
    bad-reversed-sequence, # E0111
    bad-str-strip-call, # E1310
    bad-string-format-type, # E1307
    bad-super-call, # E1003
    bidirectional-unicode, # E2502
    catching-non-exception, # E0712
    class-variable-slots-conflict, # E0242
    config-parse-error, # F0011
    continue-in-finally, # E0116
    dict-iter-missing-items, # E1141
    django-not-available, # F5101
    django-not-configured, # E5110
    django-settings-module-not-found, # F5110
    duplicate-argument-name, # E0108
    duplicate-bases, # E0241
    fatal, # F0001
    format-needs-mapping, # E1303
    function-redefined, # E0102
    hard-coded-auth-user, # E5141
    # import-error, # E0401
    imported-auth-user, # E5142
    inconsistent-mro, # E0240
    inherit-non-class, # E0239
    init-is-generator, # E0100
    invalid-all-format, # E0605
    invalid-all-object, # E0604
    invalid-bool-returned, # E0304
    invalid-bytes-returned, # E0308
    invalid-character-backspace, # E2510
    invalid-character-carriage-return, # E2511
    invalid-character-esc, # E2513
    invalid-character-nul, # E2514
    invalid-character-sub, # E2512
    invalid-character-zero-width-space, # E2515
    invalid-class-object, # E0243
    invalid-enum-extension, # E0244
    invalid-envvar-value, # E1507
    invalid-format-returned, # E0311
    invalid-getnewargs-ex-returned, # E0313
    invalid-getnewargs-returned, # E0312
    invalid-hash-returned, # E0309
    invalid-index-returned, # E0305
    invalid-length-hint-returned, # E0310
    invalid-length-returned, # E0303
    invalid-metaclass, # E1139
    invalid-repr-returned, # E0306
    invalid-sequence-index, # E1126
    invalid-slice-index, # E1127
    invalid-slots, # E0238
    invalid-slots-object, # E0236
    invalid-star-assignment-target, # E0113
    invalid-str-returned, # E0307
    invalid-unary-operand-type, # E1130
    invalid-unicode-codec, # E2501
    logging-format-truncated, # E1201
    logging-too-few-args, # E1206
    logging-too-many-args, # E1205
    logging-unsupported-format, # E1200
    method-check-failed, # F0202
    method-hidden, # E0202
    misplaced-bare-raise, # E0704
    misplaced-format-function, # E0119
    missing-format-string-key, # E1304
    missing-kwoa, # E1125
    mixed-format-string, # E1302
    model-unicode-not-callable, # E5101
    modified-iterating-dict, # E4702
    modified-iterating-set, # E4703
    no-member, # E1101
    no-method-argument, # E0211
    no-name-in-module, # E0611
    no-self-argument, # E0213
    no-value-for-parameter, # E1120
    non-iterator-returned, # E0301
    nonexistent-operator, # E0107
    nonlocal-and-global, # E0115
    nonlocal-without-binding, # E0117
    not-a-mapping, # E1134
    not-an-iterable, # E1133
    not-async-context-manager, # E1701
    not-callable, # E1102
    not-context-manager, # E1129
    not-in-loop, # E0103
    notimplemented-raised, # E0711
    parse-error, # F0010
    potential-index-error, # E0643
    protobuf-enum-value, # E5902
    protobuf-no-assignment, # E5905
    protobuf-no-posargs, # E5904
    protobuf-no-proto3-membership, # E5907
    protobuf-no-repeated-membership, # E5906
    protobuf-type-error, # E5903
    protobuf-undefined-attribute, # E5901
    protobuf-wrong-extension-scope, # E5908
    raising-bad-type, # E0702
    raising-non-exception, # E0710
    redundant-keyword-arg, # E1124
    relative-beyond-top-level, # E0402
    repeated-keyword, # E1132
    return-arg-in-generator, # E0106
    return-in-init, # E0101
    return-outside-function, # E0104
    star-needs-assignment-target, # E0114
    syntax-error, # E0001
    too-few-format-args, # E1306
    too-many-format-args, # E1305
    too-many-function-args, # E1121
    too-many-star-expressions, # E0112
    truncated-format-string, # E1301
    undefined-all-variable, # E0603
    undefined-variable, # E0602
    unexpected-keyword-arg, # E1123
    unexpected-special-method-signature, # E0302
    unhashable-member, # E1143
    unpacking-non-sequence, # E0633
    unrecognized-inline-option, # E0011
    unrecognized-option, # E0015
    unsubscriptable-object, # E1136
    unsupported-assignment-operation, # E1137
    # unsupported-binary-operation, # E1131
    unsupported-delete-operation, # E1138
    unsupported-membership-test, # E1135
    used-before-assignment, # E0601
    used-prior-global-declaration, # E0118
    yield-inside-async-function, # E1700
    yield-outside-function, # E0105

[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, msvs
# (visual studio) and html. You can also give a reporter class, eg
# mypackage.mymodule.MyReporterClass.
output-format=text

# Tells whether to display a full report or only the messages
reports=no

# Python expression which should return a note less than 10 (10 is the highest
# note). You have access to the variables errors warning, statement which
# respectively contain the number of errors / warnings messages and the total
# number of statements analyzed. This is used by the global evaluation report
# (RP0004).
evaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)

# Template used to display messages. This is a python new-style format string
# used to format the message information. See doc for all details
#msg-template=


[FORMAT]

# Maximum number of characters on a single line.
max-line-length=120

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Allow the body of an if to be on the same line as the test if there is no
# else.
single-line-if-stmt=no

# Maximum number of lines in a module
max-module-lines=1000

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1
# tab).
indent-string='    '

# Number of spaces of indent required inside a hanging  or continued line.
indent-after-paren=4

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=LF


[SPELLING]

# Spelling dictionary name. Available dictionaries: none. To make it working
# install python-enchant package.
spelling-dict=

# List of comma separated words that should not be checked.
spelling-ignore-words=

# A path to a file that contains private dictionary; one word per line.
spelling-private-dict-file=

# Tells whether to store unknown words to indicated private dictionary in
# --spelling-private-dict-file option instead of raising a message.
spelling-store-unknown-words=no


[LOGGING]

# Logging modules to check that the string format arguments are in logging
# function parameter format
logging-modules=logging


[BASIC]

# Good variable names which should always be accepted, separated by a comma
good-names=i,e,s,_,fd,fp

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# Colon-delimited sets of names that determine each other's naming style when
# the name regexes allow several styles.
name-group=

# Include a hint for the correct naming format with invalid-name
include-naming-hint=no

# Regular expression matching correct function names
# original:
#function-rgx=[a-z_][a-z0-9_]{2,30}$
function-rgx=[a-zA-Z_][a-zA-Z0-9_]{2,40}$

# Regular expression matching correct variable names
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct constant names
# original:
#const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$
const-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$

# Regular expression matching correct attribute names
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct argument names
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class attribute names
# original:
#class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,40}|(__.*__))$

# Regular expression matching correct inline iteration names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Regular expression matching correct class names
# original:
#class-rgx=[A-Z_][a-zA-Z0-9]+$
class-rgx=[a-zA-Z_][a-zA-Z0-9]+$

# Regular expression matching correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression matching correct method names
# original:
#method-rgx=[a-z_][a-z0-9_]{2,30}$
method-rgx=[a-zA-Z_][a-zA-Z0-9_]{2,40}$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=^_

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5


[SIMILARITIES]

# Minimum lines number of a similarity.
min-similarity-lines=4

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored. A
# mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis. It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=market.services.grpc.order_data_pb2,market.services.grpc.common_pb2,divisions.trading.services.grpc_server.trading_fix_auth_pb2,divisions.trading.services.grpc_server.trading_fix_pb2,market.services.grpc.balance_pb2,market.services.grpc.order_entry_pb2,divisions.trading.services.grpc_server.trading_fix_common_pb2

# List of classes names for which member attributes should not be checked
# (useful for classes with attributes dynamically set). This supports can work
# with qualified names.
ignored-classes=django.contrib.auth.models.User

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=requests.codes.*,mock.*


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME,XXX,TODO


[VARIABLES]

# Tells whether we should check for unused import in __init__ files.
init-import=no

# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=_$|dummy

# List of additional names supposed to be defined in builtins. Remember that
# you should avoid to define new builtins when possible.
additional-builtins=

# List of strings which can identify a callback function by name. A callback
# name must start or end with one of those strings.
callbacks=cb_,_cb


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,__new__,setUp

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=mcs

# List of member names, which should be excluded from the protected access
# warning.
exclude-protected=_asdict,_fields,_replace,_source,_make


[DESIGN]

# Maximum number of arguments for function / method
max-args=5

# Argument names that match this expression will be ignored. Default to name
# with leading underscore
ignored-argument-names=_.*

# Maximum number of locals for function / method body
max-locals=15

# Maximum number of return / yield for function / method body
max-returns=6

# Maximum number of branch for function / method body
max-branches=12

# Maximum number of statements in function / method body
max-statements=50

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Minimum number of public methods for a class (see R0903).
min-public-methods=2

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of boolean expressions in a if statement
max-bool-expr=5


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma
deprecated-modules=regsub,TERMIOS,Bastion,rexec

# Create a graph of every (i.e. internal and external) dependencies in the
# given file (report RP0402 must not be disabled)
import-graph=

# Create a graph of external dependencies in the given file (report RP0402 must
# not be disabled)
ext-import-graph=

# Create a graph of internal dependencies in the given file (report RP0402 must
# not be disabled)
int-import-graph=


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to
# "Exception"
overgeneral-exceptions=builtins.Exception
